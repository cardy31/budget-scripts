#!/opt/homebrew/bin/python3

import csv
import sys
import time
from pathlib import Path


def main():
    if len(sys.argv) != 4:
        print("Expected args: <file_to_open> <valid_month>")
        return

    file_to_open = sys.argv[1]
    valid_month = sys.argv[2]
    person = sys.argv[3]

    valid_month = int(valid_month)
    if valid_month < 1 or valid_month > 12:
        print("The second argument must be a number representing the valid month, 1-12")
    try:
        with open(file_to_open) as csvfile:
            reader = csv.reader(csvfile)

            with open(f'{Path.home()}/Downloads/expenses_formatted.csv', 'w') as formattedCsvFile:
                writer = csv.writer(formattedCsvFile)
                all_rows = []
                first_row = ""
                for row in reader:
                    if row[1] == "CREDIT":
                        continue
                    row_copy = row.copy()

                    if row_copy[0] != "Transaction date":
                        row_copy[0] = time.strptime(row_copy[0], "%m/%d/%Y")
                        if getattr(row_copy[0], "tm_mon") != valid_month:
                            continue
                    if row_copy[3] == "Memo":
                        row_copy[3] = "Category"
                    else:
                        row_copy[3] = ""
                    if row_copy[4] != "Amount":
                        row_copy[4] = str(abs(float(row_copy[4])))

                    if row_copy[0] != "Transaction date":
                        all_rows.append(row_copy)
                        all_rows.sort(key=lambda x: x[0], reverse=True)
                    else:
                        first_row = row_copy
                        first_row.pop(1)
                        first_row.insert(2, "Person")
                        continue
                    row_copy.pop(1)
                    row_copy.insert(2, person)

                for row in all_rows:
                    row[0] = time.strftime("%b %-d", row[0])

                all_rows.reverse()
                all_rows.insert(0, first_row)
                writer.writerows(all_rows)
    except OSError:
        print("The first argument must be a valid path to the CSV file to convert. Full path required (no ~/...)")


if __name__ == '__main__':
    main()

